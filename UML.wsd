@startuml
class busca{
    - LeitorArquivo: QFile
    - MemoriaPrograma: QList<QString>
    - BarreiraOut: *BarreiraBuscaDecodifica

    + Busca(endereco:QString, barreira:*BarreiraBuscaDecodifica)
    + Executar( pc: int):void

}

class BarreiraBuscaDecodifica{
    - Deco: decodifica
    - Inst: instrucao
    + Trigger() :void
    + SetInstr(instr:instrucao)
}
class BarreiraDecoExec{
    - Exec: execucao
    - OperadorX: int
    - OperadorY: int
    - OperadorZ: int
    - Operacao: QString
    + Trigger(): void
    + SetOpX(x:int):void
    + SetOpY(y:int):void
    + SetOpZ(z:int):void
    + SetOperacao(op:QString)

}
class decodifica{
    - BarreiraOut: *BarreiraDecoExec
    - Registradores: QList<int>
    + Executar( inst: instrucao):void
    + WB( end:int, dado:int):void
}
class execucao{
    - BarreiraOut: *BarreiraExecMem
    + Executar( x:int, y:int, z:int, op:QString ):void
}
class BarreiraExecMem{
    - Zero: bool
    - Result: int
    - EscreveDado: int
    - W_R: bool
    - PC: *int
    + Trigger():void
    + SetPC(pc:int):void
    + SetZero(z:bool):void
    + SetResult(result: int):void
    + SetEscreveDado(end: int):void
    + SetW_R(W_R:bool):void
}
class memoriaDados{
    - BarreiraOut: *BarreiraMemWB 
    - Memoria: QList<int>
    +Executar(end:int, dado:int, W_R:bool):void
}
class BarreiraMemWB{
    - Endereco: int
    - Dado: int
    + SetEndereco(end:int):void
    + SetDado(dado:int):void
    + Trigger():void
}
class instrucao{
    - Operacao:QString
    - Op1: QString
    - Op2: QString
    - Op3: QString
    + instrucao(input: QString)
    + GetOperacao():QString
    + GetOp1():QString
    + GetOp2():QString
    + GetOp3():QString
}
busca - BarreiraBuscaDecodifica
busca ..> instrucao
BarreiraBuscaDecodifica - decodifica
decodifica - BarreiraDecoExec
BarreiraDecoExec - execucao
execucao - BarreiraExecMem
BarreiraExecMem - memoriaDados
memoriaDados -left- BarreiraMemWB
BarreiraMemWB --- decodifica
BarreiraBuscaDecodifica ..> instrucao






@enduml